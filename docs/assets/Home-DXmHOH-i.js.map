{"version":3,"file":"Home-DXmHOH-i.js","sources":["../../src/lib/components/ui/card/card.svelte","../../src/lib/components/ui/tabs/tabs-content.svelte","../../src/lib/components/ui/tabs/tabs-list.svelte","../../src/lib/components/ui/tabs/tabs-trigger.svelte","../../src/lib/components/ui/tabs/index.ts","../../src/components/TabbedSearch.svelte","../../src/routes/Home.svelte"],"sourcesContent":["<script lang=\"ts\">\n    import type { WithElementRef } from 'bits-ui';\n    import type { HTMLAttributes } from 'svelte/elements';\n    import { cn } from '$lib/utils.js';\n\n    let {\n        ref = $bindable(null),\n        class: className,\n        children,\n        ...restProps\n    }: WithElementRef<HTMLAttributes<HTMLDivElement>> = $props();\n</script>\n\n<div\n    bind:this={ref}\n    class={cn('bg-card text-card-foreground rounded-lg border shadow-sm', className)}\n    {...restProps}\n>\n    {@render children?.()}\n</div>\n","<script lang=\"ts\">\n\timport { Tabs as TabsPrimitive } from \"bits-ui\";\n\timport { cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tref = $bindable(null),\n\t\tclass: className,\n\t\t...restProps\n\t}: TabsPrimitive.ContentProps = $props();\n</script>\n\n<TabsPrimitive.Content\n\tbind:ref\n\tclass={cn(\n\t\t\"ring-offset-background focus-visible:ring-ring mt-2 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2\",\n\t\tclassName\n\t)}\n\t{...restProps}\n/>\n","<script lang=\"ts\">\n\timport { Tabs as TabsPrimitive } from \"bits-ui\";\n\timport { cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tref = $bindable(null),\n\t\tclass: className,\n\t\t...restProps\n\t}: TabsPrimitive.ListProps = $props();\n</script>\n\n<TabsPrimitive.List\n\tbind:ref\n\tclass={cn(\n\t\t\"bg-muted text-muted-foreground inline-flex h-10 items-center justify-center rounded-md p-1\",\n\t\tclassName\n\t)}\n\t{...restProps}\n/>\n","<script lang=\"ts\">\n\timport { Tabs as TabsPrimitive } from \"bits-ui\";\n\timport { cn } from \"$lib/utils.js\";\n\n\tlet {\n\t\tref = $bindable(null),\n\t\tclass: className,\n\t\t...restProps\n\t}: TabsPrimitive.TriggerProps = $props();\n</script>\n\n<TabsPrimitive.Trigger\n\tbind:ref\n\tclass={cn(\n\t\t\"ring-offset-background focus-visible:ring-ring data-[state=active]:bg-background data-[state=active]:text-foreground inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm\",\n\t\tclassName\n\t)}\n\t{...restProps}\n/>\n","import { Tabs as TabsPrimitive } from \"bits-ui\";\nimport Content from \"./tabs-content.svelte\";\nimport List from \"./tabs-list.svelte\";\nimport Trigger from \"./tabs-trigger.svelte\";\n\nconst Root = TabsPrimitive.Root;\n\nexport {\n\tRoot,\n\tContent,\n\tList,\n\tTrigger,\n\t//\n\tRoot as Tabs,\n\tContent as TabsContent,\n\tList as TabsList,\n\tTrigger as TabsTrigger,\n};\n","<script lang=\"ts\">\n    import { navigate } from '../router';\n    import * as Tabs from '$lib/components/ui/tabs';\n\n    let activeTab = 'smart';\n    let searchValues = {\n        smart: '',\n        username: '',\n        password: '',\n        domain: '',\n        email: '',\n    };\n\n    type SearchType = keyof typeof searchValues;\n\n    function handleSearch(type: SearchType) {\n        const value = searchValues[type];\n        if (!value) return;\n\n        switch (type) {\n            case 'smart':\n                // Auto-detect search type\n                if (value.includes('@')) {\n                    navigate(`/email/${value}`);\n                } else if (value.includes('.') && !value.includes(' ')) {\n                    navigate(`/domain/${value}`);\n                } else {\n                    navigate(`/username/${value}`);\n                }\n                break;\n            case 'username':\n                navigate(`/username/${value}`);\n                break;\n            case 'password':\n                navigate(`/password/${value}`);\n                break;\n            case 'domain':\n                navigate(`/domain/${value}`);\n                break;\n            case 'email':\n                navigate(`/email/${value}`);\n                break;\n        }\n    }\n\n    function handleKeydown(e: KeyboardEvent, type: SearchType) {\n        if (e.key === 'Enter') {\n            handleSearch(type);\n        }\n    }\n</script>\n\n<Tabs.Root bind:value={activeTab} class=\"w-full\">\n    <Tabs.List class=\"grid w-full grid-cols-5 mb-6\">\n        <Tabs.Trigger value=\"smart\" class=\"flex items-center gap-1\">Smart Search</Tabs.Trigger>\n\n        <Tabs.Trigger value=\"username\" class=\"flex items-center gap-1\">Username</Tabs.Trigger>\n\n        <Tabs.Trigger value=\"password\" class=\"flex items-center gap-1\">Password</Tabs.Trigger>\n\n        <Tabs.Trigger value=\"domain\" class=\"flex items-center gap-1\">Domain</Tabs.Trigger>\n\n        <Tabs.Trigger value=\"email\" class=\"flex items-center gap-1\">Email</Tabs.Trigger>\n    </Tabs.List>\n\n    <Tabs.Content value=\"smart\" class=\"space-y-4\">\n        <div class=\"relative\">\n            <input\n                bind:value={searchValues.smart}\n                on:keydown={(e) => handleKeydown(e, 'smart')}\n                type=\"text\"\n                placeholder=\"Enter username, email, or domain\"\n                class=\"flex h-12 w-full rounded-md border border-input bg-background px-4 py-3 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                autofocus\n            />\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n                <svg\n                    class=\"w-5 h-5 text-muted-foreground\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                    ></path>\n                </svg>\n            </div>\n        </div>\n        <p class=\"text-sm text-muted-foreground\">\n            Press Enter to search. I'll automatically detect the type of search.\n        </p>\n    </Tabs.Content>\n\n    <Tabs.Content value=\"username\" class=\"space-y-4\">\n        <div class=\"relative\">\n            <input\n                bind:value={searchValues.username}\n                on:keydown={(e) => handleKeydown(e, 'username')}\n                type=\"text\"\n                placeholder=\"Enter username (e.g., john_doe)\"\n                class=\"flex h-12 w-full rounded-md border border-input bg-background px-4 py-3 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n            />\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n                <svg\n                    class=\"w-5 h-5 text-muted-foreground\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"\n                    ></path>\n                </svg>\n            </div>\n        </div>\n        <p class=\"text-sm text-muted-foreground\">Search for usernames across breach databases.</p>\n    </Tabs.Content>\n\n    <Tabs.Content value=\"password\" class=\"space-y-4\">\n        <div class=\"relative\">\n            <input\n                bind:value={searchValues.password}\n                on:keydown={(e) => handleKeydown(e, 'password')}\n                type=\"password\"\n                placeholder=\"Enter password to check\"\n                class=\"flex h-12 w-full rounded-md border border-input bg-background px-4 py-3 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n            />\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n                <svg\n                    class=\"w-5 h-5 text-muted-foreground\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z\"\n                    ></path>\n                </svg>\n            </div>\n        </div>\n        <div class=\"p-3 bg-destructive/20 rounded-md\">\n            <p class=\"text-sm text-destructive\">\n                ⚠️ Security Warning: This password will be checked against breach databases. Only\n                test passwords you no longer use.\n            </p>\n        </div>\n    </Tabs.Content>\n\n    <Tabs.Content value=\"domain\" class=\"space-y-4\">\n        <div class=\"relative\">\n            <input\n                bind:value={searchValues.domain}\n                on:keydown={(e) => handleKeydown(e, 'domain')}\n                type=\"text\"\n                placeholder=\"Enter domain (e.g., example.com)\"\n                class=\"flex h-12 w-full rounded-md border border-input bg-background px-4 py-3 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n            />\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n                <svg\n                    class=\"w-5 h-5 text-muted-foreground\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9\"\n                    ></path>\n                </svg>\n            </div>\n        </div>\n        <p class=\"text-sm text-muted-foreground\">\n            Find all accounts associated with a specific domain.\n        </p>\n    </Tabs.Content>\n\n    <Tabs.Content value=\"email\" class=\"space-y-4\">\n        <div class=\"relative\">\n            <input\n                bind:value={searchValues.email}\n                on:keydown={(e) => handleKeydown(e, 'email')}\n                type=\"email\"\n                placeholder=\"Enter email address\"\n                class=\"flex h-12 w-full rounded-md border border-input bg-background px-4 py-3 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n            />\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-3\">\n                <svg\n                    class=\"w-5 h-5 text-muted-foreground\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                >\n                    <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                    ></path>\n                </svg>\n            </div>\n        </div>\n        <p class=\"text-sm text-muted-foreground\">\n            Search for email addresses and view detailed breach information from Have I Been Pwned.\n        </p>\n    </Tabs.Content>\n</Tabs.Root>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import * as Card from '$lib/components/ui/card';\n    import TabbedSearch from '../components/TabbedSearch.svelte';\n    import { breadcrumbs } from '../stores/breadcrumbs';\n\n    onMount(() => {\n        breadcrumbs.clearBreadcrumbs();\n    });\n</script>\n\n<div class=\"px-4 py-8\">\n    <div class=\"max-w-2xl mx-auto\">\n        <h1 class=\"text-3xl font-bold text-foreground mb-8\">PassDB Search</h1>\n\n        <Card.Root class=\"p-6 border-0\">\n            <TabbedSearch />\n        </Card.Root>\n    </div>\n</div>\n"],"names":["ref","restProps","$.rest_props","$$props","cn","$.bind_this","div","$$value","expression","$.derived","Root","TabsPrimitive.Root","activeTab","searchValues","$.mutable_source","handleSearch","type","value","$.get","navigate","handleKeydown","e","$.bind_value","input","$.mutate","$.event","input_1","input_2","input_3","input_4","onMount","breadcrumbs"],"mappings":"sXAMQ,IAAAA,eAAgB,IAAI,EAGjBC,EAAAC,EAAAC,EAAA,2FAOHF,CAAS,GAAA,CADN,IAAAG,EAAG,2DAA0DD,EAAA,KAAA,sCADzDE,EAAAC,EAAAC,GAAAP,SAAAA,GAAG,qCCThB,IAAAA,eAAgB,IAAI,EAEjBC,EAAAC,EAAAC,EAAA,kEAMG,MAAAK,EAAAC,EAAA,IAAAL,EACN,kIAAiID,EAAA,KAAA,CAAA,0DAG9HF,mFCZH,IAAAD,eAAgB,IAAI,EAEjBC,EAAAC,EAAAC,EAAA,kEAMG,MAAAK,EAAAC,EAAA,IAAAL,EACN,6FAA4FD,EAAA,KAAA,CAAA,0DAGzFF,kFCZH,IAAAD,eAAgB,IAAI,EAEjBC,EAAAC,EAAAC,EAAA,kEAMG,MAAAK,EAAAC,EAAA,IAAAL,EACN,sYAAqYD,EAAA,KAAA,CAAA,0DAGlYF,0DCZL,MAAMS,GAAOC;++DCDL,IAAAC,IAAY,OAAO,EACnBC,EAAYC,EAAA,CACZ,MAAO,GACP,SAAU,GACV,SAAU,GACV,OAAQ,GACR,MAAO,cAKFC,EAAaC,EAAkB,OAC9BC,EAAKC,EAAGL,CAAY,EAACG,CAAI,KAC1BC,SAEGD,EAAI,KACH,QAEGC,EAAM,SAAS,GAAG,EAClBE,YAAmBF,CAAK,EAAA,EACjBA,EAAM,SAAS,GAAG,GAAA,CAAMA,EAAM,SAAS,GAAG,EACjDE,aAAoBF,CAAK,EAAA,EAEzBE,eAAsBF,CAAK,EAAA,YAG9B,WACDE,eAAsBF,CAAK,EAAA,YAE1B,WACDE,eAAsBF,CAAK,EAAA,YAE1B,SACDE,aAAoBF,CAAK,EAAA,YAExB,QACDE,YAAmBF,CAAK,EAAA,QAGpC,CAES,SAAAG,EAAcC,EAAkBL,EAAkB,CACnDK,EAAE,MAAQ,SACVN,EAAaC,CAAI,CAEzB,+CAGmBJ,CAAS,mBAATA,EAASL,CAAA,q4BAgBJe,EAAAC,EAAA,IAAAL,EAAAL,CAAY,EAAC,MAAKN,GAAAiB,EAAlBX,EAAYK,EAAZL,CAAY,EAAC,MAAKN,CAAA,CAAA,EACjBkB,EAAA,UAAAF,EAAAF,GAAMD,EAAcC,EAAG,OAAO,CAAA,gIA8B/BC,EAAAI,EAAA,IAAAR,EAAAL,CAAY,EAAC,SAAQN,GAAAiB,EAArBX,EAAYK,EAAZL,CAAY,EAAC,SAAQN,CAAA,CAAA,EACpBkB,EAAA,UAAAC,EAAAL,GAAMD,EAAcC,EAAG,UAAU,CAAA,gIA2BlCC,EAAAK,EAAA,IAAAT,EAAAL,CAAY,EAAC,SAAQN,GAAAiB,EAArBX,EAAYK,EAAZL,CAAY,EAAC,SAAQN,CAAA,CAAA,EACpBkB,EAAA,UAAAE,EAAAN,GAAMD,EAAcC,EAAG,UAAU,CAAA,8HAgClCC,EAAAM,EAAA,IAAAV,EAAAL,CAAY,EAAC,OAAMN,GAAAiB,EAAnBX,EAAYK,EAAZL,CAAY,EAAC,OAAMN,CAAA,CAAA,EAClBkB,EAAA,UAAAG,EAAAP,GAAMD,EAAcC,EAAG,QAAQ,CAAA,6HA6BhCC,EAAAO,EAAA,IAAAX,EAAAL,CAAY,EAAC,MAAKN,GAAAiB,EAAlBX,EAAYK,EAAZL,CAAY,EAAC,MAAKN,CAAA,CAAA,EACjBkB,EAAA,UAAAI,EAAAR,GAAMD,EAAcC,EAAG,OAAO,CAAA,kQCzLvDS,GAAO,IAAO,CACVC,GAAY,iBAAgB,EAC/B"}